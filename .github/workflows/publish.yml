name: Build, Push, and Deploy Docker Image

on:
  push:
    branches:
      - main

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_IMAGE_NAME: comics
  DOCKER_IMAGE_TAG: build-${{ github.sha }}
  SERVER_HOST: 3.68.167.84
  SERVER_USERNAME: ubuntu
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
  DATABASE_USER: ${{ secrets.DATABASE_USER }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}

jobs:
  build_push_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
m
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
      
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ env.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker buildx create --use --name mybuilder
          docker buildx build --platform linux/amd64 --push -t $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG .
  deploy:
    needs: build
    run-on: self-hosted
    steos:
      - name: Pull docker image
        run: docker pull maxmurjon/comics:latest
      - name: Delete old container
        run: docker rm -f go-app-container
      - name: Run docker container
        run: docker run -d -p 8080:8080 --name go-app-container maxmurjon/comics



      # - name: Deploy Docker image to server
      #   uses: appleboy/ssh-action@v0.1.4
      #   with:
      #     host: ${{ env.SERVER_HOST }}
      #     username: ${{ env.SERVER_USERNAME }}
      #     key: ${{ env.SSH_PRIVATE_KEY }}
      #     script: |
      #       docker stop comics || true
      #       docker rm -f comics || true
      #       docker image rm ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }} || true
      #       docker run -d --name comics -e POSTGRES_HOST=${{ env.DATABASE_HOST }} -e POSTGRES_USER=${{ env.DATABASE_USER }} -e POSTGRES_PASSWORD=${{ env.DATABASE_PASSWORD }} -p 8000:8000 ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
